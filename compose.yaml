# https://grafana.com/docs/grafana/latest/setup-grafana/installation/docker
# https://hub.docker.com/r/grafana/grafana-oss
# Try it out, default admin user credentials are admin/admin.

#
# References
#

# - https://medium.com/@sohammohite/docker-container-monitoring-with-cadvisor-prometheus-and-grafana-using-docker-compose-b47ec78efbc
#
# - https://www.youtube.com/watch?v=9TJx7QTrTyo
#

#
# Issues
#

# - https://github.com/prometheus/node_exporter/issues/1509

services:
  grafana:
    image: grafana/grafana-enterprise:10.4.2
    # image: grafana/grafana-oss:10.4.2
    container_name: grafana
    restart: unless-stopped
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:3000
      - GF_FEATURE_TOGGLES_ENABLE=publicDashboards
    #  - GF_INSTALL_PLUGINS=grafana-clock-panel
    ports:
      - 3000:3000
    volumes:
      - grafana-data:/var/lib/grafana
      # - ./provisioning/:/etc/grafana/provisioning/
    # depends_on:
    #   prometheus:
    #     condition: service_healthy

  prometheus:
    image: prom/prometheus:v2.52.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    # healthcheck:
    #   test: ['CMD', 'wget', 'http://localhost:9090']
    #   interval: 10s
    #   timeout: 15s
    #   retries: 10
    #   start_period: 40s

  # node_exporter:
  #   image: quay.io/prometheus/node-exporter:v1.8.0
  #   container_name: node_exporter
  #   command: '--path.rootfs=/host'
  #   network_mode: host
  #   pid: host
  #   restart: unless-stopped
  #   # ports:
  #   #   - 9100:9100
  #   volumes:
  #     - /:/host:ro

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    privileged: true
    restart: unless-stopped

  portainer:
    container_name: portainer
    image: docker.io/portainer/portainer-ce:latest
    ports:
      - 9000:9000
      - 9443:9443
      - 8000:8000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    restart: unless-stopped

volumes:
  grafana-data:
    driver: local
  prometheus-data:
    driver: local
  portainer-data:
    driver: local
